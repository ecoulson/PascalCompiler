type: 'Program Node'	data: '(null)'
	type: 'Program Heading Node'	data: 'PassOrFailSystem'
	type: 'Block Node'	data: '(null)'
		type: 'Variable Declaration List Node'	data: '(null)'
			type: 'Variable Declaration Node'	data: '(null)'
				type: 'Identifier List Node'	data: '(null)'
					type: 'Identifier Node'	data: 'ActualMark'
				type: 'Type Identifier Node'	data: 'Integer'
			type: 'Variable Declaration Node'	data: '(null)'
				type: 'Identifier List Node'	data: '(null)'
					type: 'Identifier Node'	data: 'PossibleMark'
				type: 'Type Identifier Node'	data: 'Integer'
			type: 'Variable Declaration Node'	data: '(null)'
				type: 'Identifier List Node'	data: '(null)'
					type: 'Identifier Node'	data: 'PercentageMark'
				type: 'Type Identifier Node'	data: 'Real'
		type: 'Compound Statement Node'	data: '(null)'
			type: 'Statements Node'	data: '(null)'
				type: 'Statement Node'	data: '(null)'
					type: 'Procedure Statement Node'	data: '(null)'
						type: 'Identifier Node'	data: 'Writeln'
						type: 'Parameter List Node'	data: '(null)'
							type: 'Actual Parameter Node'	data: '(null)'
								type: 'Expression Node'	data: '(null)'
									type: 'Simple Expression Node'	data: '(null)'
										type: 'Term Node'	data: '(null)'
											type: 'Signed Factor Node'	data: '(null)'
												type: 'Factor Node'	data: '(null)'
													type: 'String Node'	data: 'Please type the student's actual mark: '
				type: 'Statement Node'	data: '(null)'
					type: 'Procedure Statement Node'	data: '(null)'
						type: 'Identifier Node'	data: 'Readln'
						type: 'Parameter List Node'	data: '(null)'
							type: 'Actual Parameter Node'	data: '(null)'
								type: 'Expression Node'	data: '(null)'
									type: 'Simple Expression Node'	data: '(null)'
										type: 'Term Node'	data: '(null)'
											type: 'Signed Factor Node'	data: '(null)'
												type: 'Factor Node'	data: '(null)'
													type: 'Variable Node'	data: '(null)'
														type: 'Identifier Node'	data: 'ActualMark'
				type: 'Statement Node'	data: '(null)'
					type: 'Procedure Statement Node'	data: '(null)'
						type: 'Identifier Node'	data: 'Writeln'
						type: 'Parameter List Node'	data: '(null)'
							type: 'Actual Parameter Node'	data: '(null)'
								type: 'Expression Node'	data: '(null)'
									type: 'Simple Expression Node'	data: '(null)'
										type: 'Term Node'	data: '(null)'
											type: 'Signed Factor Node'	data: '(null)'
												type: 'Factor Node'	data: '(null)'
													type: 'String Node'	data: 'Please type the total possible mark of the exam : '
				type: 'Statement Node'	data: '(null)'
					type: 'Procedure Statement Node'	data: '(null)'
						type: 'Identifier Node'	data: 'Readln'
						type: 'Parameter List Node'	data: '(null)'
							type: 'Actual Parameter Node'	data: '(null)'
								type: 'Expression Node'	data: '(null)'
									type: 'Simple Expression Node'	data: '(null)'
										type: 'Term Node'	data: '(null)'
											type: 'Signed Factor Node'	data: '(null)'
												type: 'Factor Node'	data: '(null)'
													type: 'Variable Node'	data: '(null)'
														type: 'Identifier Node'	data: 'PossibleMark'
				type: 'Statement Node'	data: '(null)'
					type: 'Assignement Statement Node'	data: '(null)'
						type: 'Variable Node'	data: '(null)'
							type: 'Identifier Node'	data: 'PercentageMark'
						type: 'Expression Node'	data: '(null)'
							type: 'Simple Expression Node'	data: '(null)'
								type: 'Term Node'	data: '(null)'
									type: 'Signed Factor Node'	data: '(null)'
										type: 'Factor Node'	data: '(null)'
											type: 'Expression Node'	data: '(null)'
												type: 'Simple Expression Node'	data: '(null)'
													type: 'Term Node'	data: '(null)'
														type: 'Signed Factor Node'	data: '(null)'
															type: 'Factor Node'	data: '(null)'
																type: 'Variable Node'	data: '(null)'
																	type: 'Identifier Node'	data: 'ActualMark'
														type: 'Division Node'	data: '(null)'
														type: 'Term Node'	data: '(null)'
															type: 'Signed Factor Node'	data: '(null)'
																type: 'Factor Node'	data: '(null)'
																	type: 'Variable Node'	data: '(null)'
																		type: 'Identifier Node'	data: 'PossibleMark'
									type: 'Multiplication Node'	data: '(null)'
									type: 'Term Node'	data: '(null)'
										type: 'Signed Factor Node'	data: '(null)'
											type: 'Factor Node'	data: '(null)'
												type: 'Number Node'	data: '100'
				type: 'Statement Node'	data: '(null)'
					type: 'If Statement Node'	data: '(null)'
						type: 'Expression Node'	data: '(null)'
							type: 'Simple Expression Node'	data: '(null)'
								type: 'Term Node'	data: '(null)'
									type: 'Signed Factor Node'	data: '(null)'
										type: 'Factor Node'	data: '(null)'
											type: 'Expression Node'	data: '(null)'
												type: 'Simple Expression Node'	data: '(null)'
													type: 'Term Node'	data: '(null)'
														type: 'Signed Factor Node'	data: '(null)'
															type: 'Factor Node'	data: '(null)'
																type: 'Variable Node'	data: '(null)'
																	type: 'Identifier Node'	data: 'PercentageMark'
												type: 'Greater Than Or Equal Node'	data: '(null)'
												type: 'Expression Node'	data: '(null)'
													type: 'Simple Expression Node'	data: '(null)'
														type: 'Term Node'	data: '(null)'
															type: 'Signed Factor Node'	data: '(null)'
																type: 'Factor Node'	data: '(null)'
																	type: 'Number Node'	data: '50'
						type: 'Statement Node'	data: '(null)'
							type: 'Compound Statement Node'	data: '(null)'
								type: 'Statements Node'	data: '(null)'
									type: 'Statement Node'	data: '(null)'
										type: 'Procedure Statement Node'	data: '(null)'
											type: 'Identifier Node'	data: 'Writeln'
									type: 'Statement Node'	data: '(null)'
										type: 'Procedure Statement Node'	data: '(null)'
											type: 'Identifier Node'	data: 'Writeln'
											type: 'Parameter List Node'	data: '(null)'
												type: 'Actual Parameter Node'	data: '(null)'
													type: 'Expression Node'	data: '(null)'
														type: 'Simple Expression Node'	data: '(null)'
															type: 'Term Node'	data: '(null)'
																type: 'Signed Factor Node'	data: '(null)'
																	type: 'Factor Node'	data: '(null)'
																		type: 'String Node'	data: 'Pass'
						type: 'Statement Node'	data: '(null)'
							type: 'Compound Statement Node'	data: '(null)'
								type: 'Statements Node'	data: '(null)'
									type: 'Statement Node'	data: '(null)'
										type: 'Procedure Statement Node'	data: '(null)'
											type: 'Identifier Node'	data: 'Writeln'
									type: 'Statement Node'	data: '(null)'
										type: 'Procedure Statement Node'	data: '(null)'
											type: 'Identifier Node'	data: 'Writeln'
											type: 'Parameter List Node'	data: '(null)'
												type: 'Actual Parameter Node'	data: '(null)'
													type: 'Expression Node'	data: '(null)'
														type: 'Simple Expression Node'	data: '(null)'
															type: 'Term Node'	data: '(null)'
																type: 'Signed Factor Node'	data: '(null)'
																	type: 'Factor Node'	data: '(null)'
																		type: 'String Node'	data: 'Fail'
